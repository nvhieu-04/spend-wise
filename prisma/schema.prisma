generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid()) @db.Char(36)
  name        String
  email       String   @unique
  passwordHash String
  createdAt   DateTime @default(now())
  bankCards   BankCard[]
  settings    Setting?
  ocrProcessedTransactions OCRProcessedTransaction[]
}

model BankCard {
  id            String   @id @default(uuid()) @db.Char(36)
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @db.Char(36)
  cardName      String
  cardNumberLast4 String
  bankName      String
  cardType      String
  creditLimit   Float?
  cashbackPolicies CashbackPolicy[]
  transactions  Transaction[]
  createdAt     DateTime @default(now())
}

model Transaction {
  id             String   @id @default(uuid()) @db.Char(36)
  card           BankCard @relation(fields: [cardId], references: [id])
  cardId         String   @db.Char(36)
  amount         Float
  currency       String
  transactionDate DateTime
  merchantName   String?
  category       Category? @relation(fields: [categoryId], references: [id])
  categoryId     String?  @db.Char(36)
  cashbackEarned Float?
  createdAt      DateTime @default(now())
}

model CashbackPolicy {
  id             String   @id @default(uuid()) @db.Char(36)
  card           BankCard @relation(fields: [cardId], references: [id])
  cardId         String   @db.Char(36)
  category       Category @relation(fields: [categoryId], references: [id])
  categoryId     String   @db.Char(36)
  cashbackPercentage Float
  maxCashback    Float?
  createdAt      DateTime @default(now())
}

model Category {
  id          String   @id @default(uuid()) @db.Char(36)
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  transactions Transaction[]
  cashbackPolicies CashbackPolicy[]
}

model OCRProcessedTransaction {
  id          String   @id @default(uuid()) @db.Char(36)
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.Char(36)
  imagePath   String
  extractedText String
  processedAt DateTime @default(now())
}

model Setting {
  id                   String   @id @default(uuid()) @db.Char(36)
  user                 User     @relation(fields: [userId], references: [id])
  userId               String   @unique @db.Char(36)
  currencyPreference   String
  notificationPreference Boolean @default(true)
  createdAt            DateTime @default(now())
}